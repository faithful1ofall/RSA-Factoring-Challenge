<<<<<<< HEAD
#!/usr/bin/env python

import sys
import math
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    f = lambda x: (x * x + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize(num):
    factors = []
    while num > 1:
        factor = pollards_rho(num)
        factors.append(factor)
        num //= factor
    return factors

def check_factor(num, factors):
    num1 = factors[0]
    num2 = factors[1] if len(factors) > 1 else 1

    if num2 > num1:
        num1, num2 = num2, num1

    print("{}={}*{}".format(num, num1, num2))

def main():
    if len(sys.argv) != 2:
        print("Usage: {} <file>".format(sys.argv[0]))
        sys.exit(1)

    input_file = sys.argv[1]

    with open(input_file, 'r') as file:
        for line in file:
            num = int(line.strip())
            factors = factorize(num)
            check_factor(num, factors)

if __name__ == "__main__":
    main()

=======
#!/usr/bin/python3
from factors_functions import *
if __name__ == '__main__':

    print(unix_time(print_factors))
>>>>>>> 167f7879fbcbfada2417955454bf6e9803e8f9df
